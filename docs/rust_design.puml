@startuml 2048-rust

title 2048-Rust

class main as "Main()"

package business_layer as "Business layer"{
    class player as "Player()" {
        + train(games_per_training: u64, minmax_depth: u64, threads: u8) -> None
    }

    class game as "Game()" {
        + play_games(total_games: u64, threads: u8) -> Vec<Game_data>
    }
    class game_algorithm as "Game_algorithm" {
        + determine_best_movement(board: u64, possible_movements: Vec<Direction>) -> Direction
    }
    class board as "Board()" {
        + new() -> u64
        + perform_movement(board: u64, direction: Direction) -> board: u64
        + get_possible_movements(board: u64) -> Vec<Direction>
        + get_score(board: u64) -> u64
    }
}

package data_layer as "Data layer" {
    class memory_handler as "Memory_handler()" {
        ?
    }
}


note "Data models are used all over the place, linking not provided" as data_models_note
package data_models as "Data models" {
    struct directions as "Directions"
    struct game_data as "GameData"
}

main o-- player
player o- memory_handler
player O-- game
game O-- game_algorithm
game *-- board
data_layer <-- data_models
business_layer <-- data_models 
data_models ... data_models_note
@enduml
